# Scaffolding generated by Casein v5.1.1.5

module Casein
  class MediaController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    before_filter :needs_admin
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Media'
  		@media = Medium.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View medium'
      @medium = Medium.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new medium'
    	@medium = Medium.new
    end

    def create
      @medium = Medium.new medium_params
    
      if @medium.save
        flash[:notice] = 'Medium created'
        redirect_to casein_media_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new medium'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update medium'
      
      @medium = Medium.find params[:id]
    
      if @medium.update_attributes medium_params
        flash[:notice] = 'Medium has been updated'
        redirect_to casein_media_path
      else
        flash.now[:warning] = 'There were problems when trying to update this medium'
        render :action => :show
      end
    end
 
    def destroy
      @medium = Medium.find params[:id]

      @medium.destroy
      flash[:notice] = 'Medium has been deleted'
      redirect_to casein_media_path
    end
  
    private
      
      def medium_params
        params.require(:medium).permit(:title, :image)
      end

  end
end